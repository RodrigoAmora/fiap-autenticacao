name: CI/CD FiapAutenticacao

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  MONGODB_DATABASE: test
  MONGODB_PORT: 27017

jobs:
  build-and-test:
    name: Build e Teste
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_DATABASE: ${{ env.MONGODB_DATABASE }}

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Verificar versão do Java
        run: java -version

      - name: Cache de dependências Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      - name: Build com Maven
        run: mvn -B clean package -DskipTests

      - name: Executar testes
        run: mvn test
        env:
          SPRING_DATA_MONGODB_HOST: localhost
          SPRING_DATA_MONGODB_PORT: ${{ env.MONGODB_PORT }}
          SPRING_DATA_MONGODB_DATABASE: ${{ env.MONGODB_DATABASE }}

      - name: Publicar Artefato
        uses: actions/upload-artifact@v3
        with:
          name: FiapAutenticacao
          path: target/FiapAutenticacao-*.jar

      - name: Gerar Relatório de Testes
        if: always()
        run: mvn surefire-report:report-only

      - name: Publicar Resultados dos Testes
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: relatorio-testes
          path: |
            target/surefire-reports
            target/site

  security:
    name: Análise de Segurança
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Análise de Dependências
        uses: snyk/actions/maven@master
        continue-on-error: true # Para não falhar o pipeline em caso de vulnerabilidades
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  quality:
    name: Qualidade de Código
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache SonarCloud
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Análise SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar